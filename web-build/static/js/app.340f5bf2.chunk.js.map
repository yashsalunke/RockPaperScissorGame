{"version":3,"sources":["src/signs/rock.png","src/signs/paper.png","src/signs/scissors.png","src/PlayScreen.js","App.js","web-build/register-service-worker.js"],"names":["rock","require","paper","scissors","bgColors","randomImg","emojis","random","Math","floor","console","log","style","StyleSheet","create","container","alignItems","justifyContent","flex","counter","fontSize","color","sign","width","height","button","position","bottom","PlayScreen","useState","setCounter","useEffect","timer","setTimeout","prv","clearTimeout","View","compose","backgroundColor","Image","source","Button","onPress","title","Text","App","play","setPlay","styles","header","marginBottom","marginTop","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"sFAAA,OAAe,cAA0B,kC,iCCAzC,OAAe,cAA0B,mC,iCCAzC,OAAe,cAA0B,sC,qJCInCA,EAAOC,EAAQ,KACfC,EAAQD,EAAQ,KAChBE,EAAWF,EAAQ,KAEnBG,EAAW,CAAC,UAAW,UAAU,WAEjCC,EAAY,WACd,IAAMC,EAAS,CAACN,EAAKE,EAAMC,GACrBI,EAASC,KAAKC,MAAoB,EAAdD,KAAKD,UAE/B,OADAG,QAAQC,IAAIJ,GACLD,EAAOC,IA4CZK,EAAQC,IAAWC,OAAO,CAC5BC,UAAW,CACPC,WAAY,SACZC,eAAgB,SAChBC,KAAM,GAEVC,QAAQ,CACJC,SAAU,IACVC,MAAM,WAEVC,KAAK,CACDC,MAAM,IACNC,OAAO,KAGXC,OAAO,CACHC,SAAS,WACTC,OAAO,MAMAC,EAhEE,WAAM,IAAD,EAEYC,mBAAS,GAFrB,WAEXV,EAFW,KAEFW,EAFE,KAqBlB,OAlBAC,qBAAU,WAEN,GAAe,GAAXZ,EAAJ,CAKA,IAAMa,EAAQC,YAAW,WACrBH,GAAW,SAAAI,GAAG,OAAIA,EAAK,OACxB,KAGH,OAAO,WACLC,aAAaH,OAEhB,CAACb,IAIA,kBAACiB,EAAA,EAAD,CAAMxB,MAAOC,IAAWwB,QAAS,CAACC,gBAAkBlC,EAASe,EAAU,IAAKP,EAAMG,YAE3EI,EAAU,EAET,oCACA,kBAACoB,EAAA,EAAD,CAAO3B,MAAOA,EAAMU,KAAMkB,OAAQnC,MAClC,kBAAC+B,EAAA,EAAD,CAAMxB,MAAOA,EAAMa,QACX,kBAACgB,EAAA,EAAD,CAAQC,QAAS,kBAAMZ,EAAW,IAAIa,MAAM,iBAKpD,kBAACC,EAAA,EAAD,CAAMhC,MAAOA,EAAMO,SAAUA,KC7C9B,SAAS0B,IAAO,IAAD,EAEJhB,oBAAS,GAFL,WAErBiB,EAFqB,KAEfC,EAFe,KAG5B,OACGD,EAAO,kBAAC,EAAD,MACN,kBAACV,EAAA,EAAD,CAAMxB,MAAOoC,EAAOjC,WACpB,kBAAC6B,EAAA,EAAD,CAAMhC,MAAOoC,EAAOC,QAApB,uBACA,kBAACL,EAAA,EAAD,CAAMhC,MAAO,CAACQ,SAAS,KAAvB,8BACA,kBAACgB,EAAA,EAAD,CAAMxB,MAAOoC,EAAOvB,QAClB,kBAACgB,EAAA,EAAD,CAAQE,MAAM,OAAOD,QAAS,kBAAIK,GAAQ,QAQlD,IAAMC,EAASnC,IAAWC,OAAO,CAC/BC,UAAW,CACTG,KAAM,EACNoB,gBAAiB,OACjBtB,WAAY,SACZC,eAAgB,UAElBgC,OAAO,CACL7B,SAAU,GACV8B,aAAc,IAGhBzB,OAAO,CACL0B,UAAW,IACX5B,MAAO,Q,4DCnCP,kBAAmB6B,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfnD,QAAQiD,KAAK,oCAAqCE,W","file":"static/js/app.340f5bf2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rock.79436ec1.png\";","export default __webpack_public_path__ + \"static/media/paper.599c25df.png\";","export default __webpack_public_path__ + \"static/media/scissors.f27b7752.png\";","import React,{useState, useEffect} from 'react'\r\nimport { View, Text, StyleSheet, Button, Image} from 'react-native'\r\n\r\n\r\nconst rock = require('./signs/rock.png')\r\nconst paper = require('./signs/paper.png')\r\nconst scissors = require('./signs/scissors.png')\r\n\r\nconst bgColors = ['#1abc9c', '#2ecc71','#3498db']\r\n\r\nconst randomImg = ()=>{\r\n    const emojis = [rock,paper,scissors]\r\n    const random = Math.floor(Math.random()*3)\r\n    console.log(random)\r\n    return emojis[random]\r\n}\r\n\r\nconst PlayScreen=()=> {\r\n\r\n    const [counter, setCounter] = useState(3)\r\n    useEffect(() => {\r\n        // console.log(counter);\r\n        if (counter == 0) {\r\n            return\r\n            \r\n        }\r\n\r\n        const timer = setTimeout(() => {\r\n            setCounter(prv => prv -1)\r\n        }, 500);\r\n\r\n\r\n        return () => {\r\n          clearTimeout(timer)\r\n        }\r\n    }, [counter]);\r\n\r\n\r\n    return (\r\n        <View style={StyleSheet.compose( {backgroundColor : bgColors[counter - 1]}, style.container )}>\r\n            \r\n            { (counter < 1) ? (\r\n\r\n                <>\r\n                <Image style={style.sign} source={randomImg()} />\r\n                <View style={style.button}>\r\n                        <Button onPress={() => setCounter(3)} title=\"Play Again\" />\r\n                </View>\r\n                \r\n                </>\r\n\r\n            ) : <Text style={style.counter}>{counter}</Text>\r\n        }\r\n            \r\n        </View>\r\n    );\r\n};\r\n\r\nconst style = StyleSheet.create({\r\n    container: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flex: 1\r\n    },\r\n    counter:{\r\n        fontSize: 150,\r\n        color:'#ffffff',\r\n    },\r\n    sign:{\r\n        width:220,\r\n        height:220, \r\n\r\n    },\r\n    button:{\r\n        position:\"absolute\",\r\n        bottom:40,\r\n    },\r\n}\r\n\r\n)\r\n\r\nexport default PlayScreen;\r\n","import { StatusBar } from 'expo-status-bar';\nimport React,{ useState } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nimport PlayScreen from './src/PlayScreen'\n\nexport default function App() {\n\n  const [play, setPlay] = useState(false)\n  return (\n     play? (<PlayScreen />):\n     (<View style={styles.container}>\n      <Text style={styles.header}>Rock Paper Scissors</Text>\n      <Text style={{fontSize:65}}>✊ ✋ ✌️</Text>\n      <View style={styles.button}>\n        <Button title=\"PLAY\" onPress={()=>setPlay(true)} />\n      </View>\n    </View> )\n   \n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header:{\n    fontSize: 30,\n    marginBottom: 15,\n\n  },\n  button:{\n    marginTop: 100,\n    width: 250\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}